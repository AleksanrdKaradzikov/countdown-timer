{"version":3,"sources":["media/audio/finish-sound.mp3","components/timer.js","components/start-form.jsx","components/box-result.jsx","components/countdown.jsx","components/App.jsx","index.js"],"names":["module","exports","Timer","stopTimer","event","preventDefault","clearAll","startTime","startDate","time","Date","getTime","msSeconds","Math","floor","seconds","minutes","hours","setState","timerId","requestAnimationFrame","findTIME","state","play","init","cancelAnimationFrame","this","icon","toString","padStart","toTimeString","className","onClick","size","type","style","fontSize","color","fontWeight","htmlType","React","Component","isInValid","valid","touched","showldValidate","StartForm","handleSubmitForm","toConvertValue","value","mins","round","props","formControl","inputDisabled","handleChangeInput","Object","keys","map","controlName","index","control","htmlFor","random","inputClass","validation","labelClass","key","label","min","max","id","required","disabled","onChange","target","totalValueSlider","step","tipFormatter","isStartValid","findTime","onSubmit","renderInputs","renderSlider","BoxResult","persent","width","format","percent","defaultProps","returnFormattedToSeconds","Countdown","Number","isNaN","timerData","isValid","minMinuts","maxMin","minSeconds","maxSecond","validateControl","forEach","name","totalTime","newTotalTime","newTimerData","clearTimeout","clearFields","alert","setTimeout","toFixed","Audio","finishedSound","t","App","TabPane","Tabs","defaultActiveKey","tab","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bc8bbf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/finish-sound.ff93cfed.mp3\";","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/sort-comp */\nimport React from 'react';\nimport { Button, Icon } from 'antd';\n\nconst toTimeString = ({ hours, minutes, seconds, msSeconds }) => {\n  return `${hours.toString().padStart(2, '0')}:${minutes\n    .toString()\n    .padStart(2, '0')}:${seconds.toString().padStart(2, '0')}:${msSeconds\n    .toString()\n    .padStart(2, '0')}`;\n};\n\nexport default class Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      msSeconds: 0,\n      play: true,\n      init: false,\n    };\n  }\n\n  clearAll() {\n    this.setState({\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      msSeconds: 0,\n      play: true,\n      init: false,\n    });\n    cancelAnimationFrame(this.timerId);\n  }\n\n  stopTimer = event => {\n    event.preventDefault();\n    this.clearAll();\n  };\n\n  startTime = startDate => () => {\n    const thisDate = new Date();\n    let time = thisDate.getTime() - startDate.getTime();\n    let msSeconds = time % 1000;\n    time -= msSeconds;\n    msSeconds = Math.floor(msSeconds / 10);\n    time = Math.floor(time / 1000);\n    const seconds = time % 60;\n    time -= seconds;\n    time = Math.floor(time / 60);\n    const minutes = time % 60;\n    time -= minutes;\n    time = Math.floor(time / 60);\n    const hours = time % 60;\n\n    this.setState(\n      {\n        hours,\n        minutes,\n        seconds,\n        msSeconds,\n      },\n      () => {\n        this.timerId = requestAnimationFrame(this.startTime(startDate));\n      }\n    );\n  };\n\n  findTIME = event => {\n    event.preventDefault();\n    const { play, init } = this.state;\n    if (play && !init) {\n      this.startDate = new Date();\n      this.timerId = requestAnimationFrame(this.startTime(this.startDate));\n      this.setState({ play: false, init: true });\n    } else if (play && init) {\n      this.timerId = requestAnimationFrame(this.startTime(this.startDate));\n      this.setState({ play: false });\n    } else {\n      cancelAnimationFrame(this.timerId);\n      this.setState({ play: true });\n    }\n  };\n\n  render() {\n    const { hours, minutes, seconds, msSeconds, play } = this.state;\n    const icon = play ? 'play-circle' : 'pause-circle';\n    const time = toTimeString({ hours, minutes, seconds, msSeconds });\n    return (\n      <div className=\"timer-wrapper\">\n        <div className=\"timer-wrapper__result\">\n          <span className=\"time\">{time}</span>\n        </div>\n        <div className=\"timer-wrapper__btns\">\n          <Button\n            onClick={this.findTIME}\n            className=\"timer-wrapper__btn timer-wrapper__btn--run\"\n            size=\"large\"\n            type=\"primary\"\n          >\n            {\n              <Icon\n                type={icon}\n                style={{ fontSize: '40px', color: '#1890FF', fontWeight: 'bold' }}\n              />\n            }\n          </Button>\n          <Button\n            onClick={this.stopTimer}\n            className=\"timer-wrapper__btn timer-wrapper__btn--reset\"\n            size=\"large\"\n            type=\"danger\"\n            htmlType=\"submit\"\n          >\n            <Icon type=\"close-square\" style={{ fontSize: '40px', color: 'rgb(230, 65, 65)' }} />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/require-default-props */\nimport React from 'react';\nimport '../style/App.css';\nimport { Button, Icon, Slider } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst isInValid = (valid, touched, showldValidate) => {\n  if (valid === false && showldValidate && touched) {\n    return true;\n  }\n  return false;\n};\n\nclass StartForm extends React.Component {\n  handleSubmitForm = event => {\n    event.preventDefault();\n  };\n\n  toConvertValue = value => {\n    const mins = Math.floor(value / 60);\n    const seconds = Math.round(value - mins * 60);\n    return `${mins.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  renderInputs() {\n    const { formControl, inputDisabled, handleChangeInput } = this.props;\n    return Object.keys(formControl).map((controlName, index) => {\n      const control = formControl[controlName];\n      const htmlFor = `control-${Math.random()}`;\n      const inputClass = isInValid(control.valid, control.touched, !!control.validation)\n        ? 'input input-invalid '\n        : 'input';\n      const labelClass = isInValid(control.valid, control.touched, !!control.validation)\n        ? 'label label-invalid'\n        : 'label';\n\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <label key={control + index} htmlFor={htmlFor} className={labelClass}>\n          <span className=\"control-span\">{control.label}</span>\n          <input\n            className={inputClass}\n            type={control.type}\n            value={control.value}\n            min={control.min}\n            max={control.max}\n            id={htmlFor}\n            required={control.validation.required}\n            disabled={inputDisabled}\n            onChange={event => handleChangeInput(event.target.value, controlName)}\n          />\n        </label>\n      );\n    });\n  }\n\n  renderSlider() {\n    const { totalValueSlider, inputDisabled, handleChangeInput } = this.props;\n    return (\n      <Slider\n        className=\"slider-input\"\n        min={0}\n        max={3600}\n        step={15}\n        disabled={inputDisabled}\n        onChange={value => handleChangeInput(value, 'slider')}\n        value={totalValueSlider}\n        tipFormatter={this.toConvertValue}\n      />\n    );\n  }\n\n  render() {\n    const { play, isStartValid, findTime, clearAll } = this.props;\n    const icon = play ? 'play-circle' : 'pause-circle';\n    return (\n      <form className=\"form-control\" onSubmit={this.handleSubmitForm}>\n        <h2 className=\"form-control__heading\">Введите время:</h2>\n        <div className=\"form-control__input-block\">{this.renderInputs()}</div>\n        <div className=\"form-control__slider-block\">{this.renderSlider()}</div>\n        <div className=\"form-control__buttons-block\">\n          <Button\n            onClick={() => findTime()}\n            disabled={!isStartValid}\n            className=\"control-btn control-btn--run\"\n            size=\"large\"\n            type=\"primary\"\n          >\n            {\n              <Icon\n                type={icon}\n                style={{\n                  fontSize: '40px',\n                  color: `${isStartValid ? '#1890FF' : 'silver'}`,\n                  fontWeight: 'bold',\n                }}\n              />\n            }\n          </Button>\n          <Button\n            onClick={() => clearAll()}\n            className=\"control-btn control-btn--reset\"\n            size=\"large\"\n            type=\"danger\"\n            htmlType=\"submit\"\n          >\n            <Icon type=\"close-square\" style={{ fontSize: '40px', color: 'rgb(230, 65, 65)' }} />\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nStartForm.propTypes = {\n  play: PropTypes.bool,\n  isStartValid: PropTypes.bool,\n  findTime: PropTypes.func,\n  clearAll: PropTypes.func,\n  totalValueSlider: PropTypes.number,\n  inputDisabled: PropTypes.bool,\n  handleChangeInput: PropTypes.func,\n  formControl: PropTypes.object,\n};\n\nexport default StartForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Progress } from 'antd';\n\nconst toTimeString = ({ minutes, seconds }) => {\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n};\n\nconst BoxResult = ({ seconds, minutes, persent }) => {\n  return (\n    <div className=\"result-box\">\n      <div className=\"result-box__progress\">\n        <Progress\n          type=\"circle\"\n          width={180}\n          format={() => {\n            return <span className=\"result-box__time\">{toTimeString({ minutes, seconds })}</span>;\n          }}\n          percent={persent}\n        />\n      </div>\n    </div>\n  );\n};\n\nBoxResult.defaultProps = {\n  seconds: 0,\n  minutes: 0,\n  persent: 0,\n};\n\nBoxResult.propTypes = {\n  seconds: PropTypes.number,\n  persent: PropTypes.number,\n  minutes: PropTypes.number,\n};\n\nexport default BoxResult;\n","/* eslint-disable react/sort-comp */\n/* eslint-disable id-length */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport StartForm from './start-form';\nimport BoxResult from './box-result';\nimport finishedSound from '../media/audio/finish-sound.mp3';\n\nfunction validateControl(value, validation) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.minMinuts) {\n    isValid = value >= validation.minMinuts && isValid;\n  }\n\n  if (validation.maxMin) {\n    isValid = value <= validation.maxMin && isValid;\n  }\n\n  if (validation.minSeconds) {\n    isValid = value >= validation.minSeconds && isValid;\n  }\n\n  if (validation.maxSecond) {\n    isValid = value <= validation.maxSecond && isValid;\n  }\n\n  return isValid;\n}\n\nfunction returnFormattedToSeconds(time) {\n  const minutes = Math.floor(time / 60);\n  const seconds = Math.round(time - minutes * 60);\n\n  return {\n    minutes,\n    seconds,\n  };\n}\n\nexport default class Countdown extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      inputDisabled: false,\n      isStartValid: true,\n      totalValueSlider: 0,\n      formControl: {\n        minutes: {\n          value: 0,\n          label: 'Минуты:',\n          type: 'number',\n          valid: true,\n          min: 0,\n          max: 720,\n          touched: false,\n          validation: {\n            required: true,\n            maxMin: 720,\n            minMinuts: '0',\n          },\n        },\n        seconds: {\n          value: 0,\n          label: 'Cекунды:',\n          type: 'number',\n          valid: true,\n          min: 0,\n          max: 59,\n          touched: false,\n          validation: {\n            required: true,\n            maxSecond: 59,\n            minSeconds: '0',\n          },\n        },\n      },\n      timerData: {\n        minutes: 0,\n        seconds: 0,\n        play: true,\n        init: false,\n        timerId: null,\n        persent: 0,\n        step: 0,\n        totalTime: 0,\n      },\n    };\n  }\n\n  componentWillUnmount() {\n    this.clearAll();\n  }\n\n  handleChangeInput = (value, controlName) => {\n    if (controlName === 'slider') {\n      const time = returnFormattedToSeconds(value);\n      const step = 100 / (time.minutes * 60 + time.seconds);\n      const newTotalTime = time.minutes * 60 + time.seconds;\n      this.setState(({ timerData: newTimerData, formControl, totalValueSlider }) => {\n        formControl.minutes.value = time.minutes;\n        formControl.seconds.value = time.seconds;\n        formControl.minutes.touched = true;\n        formControl.seconds.touched = true;\n        formControl.minutes.valid = true;\n        formControl.seconds.valid = true;\n        newTimerData.seconds = time.seconds;\n        newTimerData.minutes = time.minutes;\n        newTimerData.step = step;\n        newTimerData.persent = 0;\n        newTimerData.totalTime = newTotalTime;\n        totalValueSlider = value;\n        return {\n          timerData: newTimerData,\n          formControl,\n          isStartValid: true,\n          totalValueSlider,\n        };\n      });\n      return;\n    }\n\n    if (Number.isNaN(value)) {\n      return;\n    }\n\n    const formControl = { ...this.state.formControl };\n    const control = { ...formControl[controlName] };\n    const timerData = { ...this.state.timerData };\n\n    control.value = value;\n    control.touched = value > 0 || value === '' || value < 0;\n    control.valid = validateControl(control.value, control.validation);\n    formControl[controlName] = control;\n\n    let isStartValid = true;\n\n    Object.keys(formControl).forEach(name => {\n      isStartValid = formControl[name].valid && isStartValid;\n    });\n\n    const key = controlName === 'minutes' ? 'minutes' : 'seconds';\n    if (control.valid) {\n      timerData[key] = +control.value;\n    }\n\n    timerData.step = 100 / (timerData.minutes * 60 + timerData.seconds);\n    timerData.totalTime = timerData.minutes * 60 + timerData.seconds;\n    timerData.persent = 0;\n\n    this.setState({\n      formControl,\n      isStartValid,\n      timerData,\n      totalValueSlider: 0,\n    });\n  };\n\n  clearAll = () => {\n    clearTimeout(this.state.timerData.timerId);\n    this.setState(({ formControl }) => {\n      formControl.minutes.value = 0;\n      formControl.minutes.valid = true;\n      formControl.minutes.touched = false;\n      formControl.seconds.value = 0;\n      formControl.seconds.valid = true;\n      formControl.seconds.touched = false;\n      const newTimerData = {\n        minutes: 0,\n        seconds: 0,\n        play: true,\n        init: false,\n        timerId: null,\n        step: 0,\n        totalTime: 0,\n      };\n      return {\n        totalValueSlider: 0,\n        inputDisabled: false,\n        isStartValid: true,\n        timerData: newTimerData,\n        formControl,\n      };\n    });\n  };\n\n  startTime() {\n    const { totalTime, step } = this.state.timerData;\n    const time = returnFormattedToSeconds(totalTime);\n    const timerData = { ...this.state.timerData };\n\n    const timerId = setTimeout(() => this.startTime(), 1000);\n\n    timerData.totalTime = totalTime - 1;\n    timerData.seconds = time.seconds;\n    timerData.minutes = time.minutes;\n    timerData.persent = Number((timerData.persent + Number(step)).toFixed(2));\n    timerData.timerId = timerId;\n\n    this.setState({\n      timerData,\n    });\n\n    if (totalTime === 0) {\n      const finishedAudio = new Audio(finishedSound);\n      finishedAudio.play();\n      this.clearAll();\n      this.setState(({ timerData: t }) => {\n        t.persent = 100;\n        return {\n          timerData: t,\n        };\n      });\n    }\n  }\n\n  clearFields() {\n    clearTimeout(this.state.timerData.timerId);\n    this.setState(({ timerData }) => {\n      timerData.play = true;\n      return {\n        timerData,\n      };\n    });\n  }\n\n  findTime = () => {\n    const { play, init, seconds, minutes } = this.state.timerData;\n    if (seconds === 0 && minutes === 0) {\n      alert('Введите время');\n      return;\n    }\n\n    if (play && !init) {\n      this.startTime();\n      this.setState(({ formControl, timerData }) => {\n        const newTimerData = { ...timerData };\n        newTimerData.init = true;\n        newTimerData.play = false;\n        newTimerData.persent = 0;\n        formControl.minutes.value = 0;\n        formControl.seconds.value = 0;\n        return {\n          inputDisabled: true,\n          formControl,\n          timerData: newTimerData,\n          totalValueSlider: 0,\n        };\n      });\n    } else if (play && init) {\n      this.startTime();\n      this.setState(({ timerData }) => {\n        timerData.play = false;\n        return {\n          timerData,\n        };\n      });\n    } else {\n      this.clearFields();\n    }\n  };\n\n  render() {\n    const { formControl, inputDisabled, isStartValid, totalValueSlider } = this.state;\n    const { play, minutes, seconds, persent } = this.state.timerData;\n    return (\n      <div className=\"countdown-wrapper\">\n        <BoxResult minutes={minutes} seconds={seconds} persent={persent} />\n        <StartForm\n          formControl={formControl}\n          inputDisabled={inputDisabled}\n          handleChangeInput={this.handleChangeInput}\n          isStartValid={isStartValid}\n          totalValueSlider={totalValueSlider}\n          play={play}\n          findTime={this.findTime}\n          clearAll={this.clearAll}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Tabs, Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport Timer from './timer';\nimport Countdown from './countdown';\nimport '../style/App.css';\n\nconst App = () => {\n  const { TabPane } = Tabs;\n  return (\n    <div className=\"tab-wrapper\">\n      <Tabs defaultActiveKey=\"2\">\n        <TabPane\n          tab={\n            <span>\n              <Icon type=\"clock-circle\" />\n              Секундомер\n            </span>\n          }\n          key=\"1\"\n        >\n          <Timer />\n        </TabPane>\n        <TabPane\n          tab={\n            <span>\n              <Icon type=\"history\" />\n              Таймер обратного отсчета\n            </span>\n          }\n          key=\"2\"\n        >\n          <Countdown />\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n// eslint-disable-next-line react/jsx-filename-extension\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}